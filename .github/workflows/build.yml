name: Build

on:
  push:
    branches:
      - main
      - development
      - hotfix/*
  pull_request:
    types: [ready_for_review, opened, reopened, auto_merge_enabled]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - targetPlatform: linux
            os: ubuntu-latest
          # - targetPlatform: macos
          #   os: ubuntu-latest
          - targetPlatform: windows
            os: windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install
        shell: bash
        run: yarn

      - name: Setup OS variables
        run: bash scripts/configure-artifact.sh ${{ matrix.targetPlatform }}

      - name: Copy config.json from the last release
        shell: bash
        run: |
          mkdir build && yarn download-config

      - name: Copy builder config
        shell: bash
        run: |
          mv electron-builder.internal.yml electron-builder.yml
          timestamp=$(date +%s)
          jq --arg version "0.0.$timestamp" '.version = $version' package.json > tmp.$$.json && mv tmp.$$.json package.json
          jq --arg suffix "Internal" '.name += $suffix' package.json > tmp.$$.json && mv tmp.$$.json package.json
          jq --arg suffix " Internal" '.productName += $suffix' package.json > tmp.$$.json && mv tmp.$$.json package.json
          yarn
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: pack
        shell: bash
        run: |
          yarn run pack:${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v3
        with:
          path: dist
          name: Dist-${{ matrix.targetPlatform }}
          retention-days: 3
          if-no-files-found: error
