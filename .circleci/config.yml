version: 2.1

orbs:
  win: circleci/windows@4.1.1

commands:
  checkout-update-submodules:
    parameters:
      paths:
        type: string
        default: ""
    steps:
      - checkout
      - run:
          command: git submodule update --init --recursive <<parameters.paths>>
          environment:
            GIT_LFS_SKIP_SMUDGE: 1
  build-headless:
    parameters:
      os:
        type: string
        default: windows
    steps:
      - run: git rev-parse HEAD:NineChronicles.Headless > tree-hash
      - restore_cache:
          keys:
            - headless-pub-<< parameters.os >>-{{ checksum "tree-hash" }}
      - run:
          command: |
            [ -d dist/publish ] || yarn build-headless:<< parameters.os >>
      - save_cache:
          key: headless-pub-<< parameters.os >>-{{ checksum "tree-hash" }}
          paths:
            - dist/publish
  yarn-install:
    steps:
      - restore_cache:
          keys:
            - yarn3-packages-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          command: |
            corepack enable
            yarn install --immutable
      - save_cache:
          key: yarn3-packages-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
  install-dotnet:
    parameters:
      version:
        type: string
        default: "6.0.100"
    steps:
      - run:
          command: |
            choco install dotnet-sdk --version <<parameters.version>> -y --no-progress
          name: Install .NET Core Latest

jobs:
  build:
    docker:
      - image: planetariumhq/9c-launcher-circleci:git-6fa331fdef32d6f124d06b6c48d07e352cc11067
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    resource_class: large
    parameters:
      os:
        type: string
    steps:
      - checkout-update-submodules:
          paths: "NineChronicles.Headless"
      - run:
          command: |
            bash scripts/configure-artifact.sh << parameters.os >> 
          name: Setup OS variables
      - yarn-install
      - run:
          command: |
            dotnet clean -c Release
            dotnet nuget locals all --clear
          working_directory: NineChronicles.Headless
          name: Clean Headless
      - build-headless:
          os: << parameters.os >>
      - run:
          command: |
            mkdir pack-dist
            set -ex
            mkdir -p dist
            curl -o "dist/config.json" 'https://download.nine-chronicles.com/9c-launcher-config.json'
          name: Copy config.json from the last release
      - run:
          command: |
            if [[ "$CIRCLE_BRANCH" == "main" ]]
            then
              yarn release:<< parameters.os >>
            else
              yarn run pack:<< parameters.os >>
            fi
      - run:
          command: |
            cd pack/Nine\ Chronicles-$OS_ALIAS-x64/
            $ZIP_CMD ../../pack-dist/$ARTIFACT *
      - store_artifacts:
          path: pack-dist
          destination: dist-artifacts
      - run:
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY
            aws configure set aws_secret_access_key $AWS_SECRET_KEY
          name: Set S3
      - run:
          command: aws s3 cp "pack-dist/$ARTIFACT" "s3://9c-artifacts/9c-launcher/$CIRCLE_SHA1/$ARTIFACT"
  styles:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - yarn-install
      - run:
          command: yarn prettier --check "src/**/*.{ts,tsx,json}"
          name: Check Formatting
      - run: yarn codegen
      - run:
          command: yarn tsc --noEmit
          name: Type Check
      - run:
          command: yarn eslint ./src --quiet
          name: ESLint Check
  chromatic:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - yarn-install
      - run: yarn codegen
      - run: yarn chromatic --project-token=${CHROMATIC_PROJECT_TOKEN} --exit-zero-on-changes
  update-translations:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - yarn-install
      - run:
          command: yarn update-translations
          name: Update Translations
  e2e-test:
    executor:
      name: win/default
      size: medium
    steps:
      - run: git config --global core.symlinks true # https://github.com/git-for-windows/git/wiki/Symbolic-Links
      - checkout-update-submodules:
          paths: "NineChronicles.Headless"
      - yarn-install
      - run: scripts/create-key.ps1
      - install-dotnet
      - run: yarn build-headless
      - run: yarn build-prod
      - run: scripts/copy-config.ps1
      - run: yarn test
      - store_artifacts:
          path: __tests__/snapshots
          destination: e2e-snapshots
      - store_artifacts:
          path: __tests__/logs
          destination: e2e-logs

workflows:
  build:
    jobs:
      - build:
          matrix:
            parameters:
              os: ["linux", "macos", "windows"]
      - styles
      - update-translations:
          filters:
            branches:
              only: development
      - e2e-test
      - chromatic
